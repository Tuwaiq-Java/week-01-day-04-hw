
#Moveable
------------------------------
package ex2;


public interface Moveable{
    public void moveUp();
    public void moveDown();
    public void moveLeft();
    public void moveRight();
    }

#MoveablePoint
------------------------------
package ex2;


public class MoveablePoint implements Moveable{

    private int x;
    private int y;
    private int xSpeed;
    private int ySpeed;

    public MoveablePoint(int x, int y, int xSpeed, int ySpeed) {
        this.x = x;
        this.y = y;
        this.xSpeed = xSpeed;
        this.ySpeed = ySpeed;
    }

    @Override
    public String toString() {
        return "MoveablePoint{" +
                "x=" + x +
                ", y=" + y +
                ", xSpeed=" + xSpeed +
                ", ySpeed=" + ySpeed +
                '}';
    }

    public void moveUp(){
        this.y -=this.ySpeed;
    }



    @Override
    public void moveDown(){
        this.y +=this.ySpeed;
    }
    @Override
    public void moveLeft() {
        this.x -=this.xSpeed;
    }
    @Override
    public void moveRight() {
        this.x +=this.xSpeed;
    }

}


-------------------------------------------------------------------------------------------------------------------------------------

#Animal
---------------------------------
abstract public class Animal {
    private String name;
    public Animal(String name){
        this.name=name;
    }
    abstract public  void greets();
}

#Cat
---------------------------------
public class Cat extends Animal {

    public Cat(String name){
        super(name);
    }
    @Override
    public void greets() {
        System.out.println("meow!");
    }
}

#Dog
----------------------------------
public class Dog extends Animal {

    public Dog(String name) {
        super(name);
    }
    @Override
    public void greets() {
        System.out.println("Woof!");
    }
    public void greets(Dog another) {
        System.out.println("Woooooooooof!");
    }
}

#BigDog
----------------------------------
public class BigDog extends Dog {
    public BigDog(String name) {
        super(name);
    }

    public void greets(){
        System.out.println("Wooow");
    }
    public void greets(BigDog another){
        System.out.println("Woooooooooooow");
    }
    public void greets(Dog another){
        System.out.println("Woooooow");
    }

}
--------------------------------------------------------------------------------------------------------------------

#Shape
-------------------------------
package ex3;

public class Shape {
    protected String color ="Red";
    protected boolean filled= true;

    public Shape() {
    }

    public Shape(String color, boolean filled) {
        this.color = color;
        this.filled = filled;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }
    public boolean isFilled(){
        return filled;
    }
    public boolean setFilled(){
        return filled;
    }
    abstract double getArea();
    abstract double getPerimeter();

    @Override
    public String toString() {
        return "Shape{" +
                "color='" + color + '\'' +
                ", filled=" + filled +
                '}';
    }
}



#Circle
----------------------------------------------
package ex3;

public class Circle extends Shape{

    protected double radius =1.0;

    public Circle(){

    }
    public Circle(double radius){
        this.radius=radius;
    }

    public Circle(String color, boolean filled, double radius) {
        super(color, filled);
        this.radius = radius;
    }

    public double getRadius() {
        return radius;
    }

    public void setRadius(double radius) {
        this.radius = radius;
    }
    @Override
    double getArea() {
        return Math.PI*Math.pow(radius, 2);
    }

    @Override
    double getPerimeter() {
        return 2*Math.PI*radius;
    }

    @Override
    public String toString() {
        return "Circle{" +
                "radius=" + radius +
                ", color='" + color + '\'' +
                ", filled=" + filled +
                '}';
    }
}

#Rectangle 
------------------------------------
package ex3;

public class Rectangle extends Shape {
    protected double width =1.0;
    protected double length =1.0;

    public Rectangle(){

    }

    public Rectangle(double width, double length) {
        this.width = width;
        this.length = length;
    }

    public Rectangle(String color, boolean filled, double width, double length) {
        super(color, filled);
        this.width = width;
        this.length = length;
    }

    public double getWidth() {
        return width;
    }

    public void setWidth(double width) {
        this.width = width;
    }

    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        this.length = length;
    }
    @Override
    double getArea() {
        return width*length;
    }

    @Override
    double getPerimeter() {
        return 2*(width+length);
    }

    @Override
    public String toString() {
        return "Rectangle{" +
                "width=" + width +
                ", length=" + length +
                ", color='" + color + '\'' +
                ", filled=" + filled +
                '}';
    }
    
}

#Square
------------------------------------------
package ex3;

public class Square extends Rectangle{
    double side;
    public Square(){

    }
    public Square(double side){
        this.side = side;
    }
    public Square(String color, boolean filled, double side) {
        super(color, filled);
        this.side = side;
    }

    public double getSide() {
        return side;
    }

    public void setSide(double side) {
        this.side = side;
    }
    public void setWidth(double side){
        this.width = side;
    }
    public void setLength(double side){
        this.length = side;
    }

    @Override
    public String toString() {
        return "Square{" +
                "side=" + side +
                ", width=" + width +
                ", length=" + length +
                ", color='" + color + '\'' +
                ", filled=" + filled +
                '}';
    }
}
